#!/bin/csh -f

#
# This script is a demo script for NLTE TS.
#

date
set mpath = models
set dpath = TEST-data

set MODEL = p5777_g+4.4_m0.0_t01_st_z+0.00_a+0.00_c+0.00_n+0.00_o+0.00_r+0.00_s+0.00.mod

set Feabu = 7.50
 
set lam_min    = '6400.'
set lam_max    = '6800.'

set deltalam   = '0.01'
set METALLIC   = '     0.000'
set TURBVEL = 1.0

set SUFFIX     = _${lam_min}-${lam_max}_xit${TURBVEL}-LTE-intens.spec
set result     = ${MODEL}${SUFFIX}

time ~/Documents/GitHub/Turbospectrum/Turbospectrum2020/exec-gf/bsyn_lu <<EOF
###########
# Use NLTE if true. Source function is then computed with departure coefficients 
# from departure coefficient file for the atoms in model atom files, if they 
# are provided. 
#
'NLTE :'          '.false.'
###########
# file containing NLTE information 
# (species, with LTE/NLTE flags, and associated files)
#
'NLTEINFOFILE:'  'DATA/SPECIES_LTE_NLTE.dat'
#
###########
# if present these files will be used to compute the spectrum in a number of
# windows specified in SEGMENTSFILE.
# Comment out if not needed, and the spectrum will be computed from
# LAMBDA_MIN to LAMBDA_MAX
# Segments must NOT overlap
#
#'SEGMENTSFILE:'     '${dpath}/uves_giant_Fe-seg.txt'
#
# spectral resolution  to be used in these windows.
# If not specified, a default value of 500000 is used
# Note that a constant step is set for each window, using this resolution
# if no windows, LAMBDA_STEP is used.
#
#'RESOLUTION:'     '300000.'
###########
# spectral interval in the case of a single wavelength interval, i.e. no 
# segmentsfile.
# min and max lambda for the calculations and constant wavelength step
#
'LAMBDA_MIN:'     '${lam_min}'
'LAMBDA_MAX:'     '${lam_max}'
'LAMBDA_STEP:'    '${deltalam}'
###########
# Intensity / Flux 
# in the Intensity case, 12 angles are hardcoded, and spectra are computed
# for all of them, in addition to the flux.
# It is possible to change these points by using points listed in the file
# indicated by the keywork 'MU-POINTS'. A maximum of 30 points is currently possible
#
'INTENSITY/FLUX:' 'Intensity'
'MU-POINTS:' '${dpath}/mupoints.dat'
###########
# file containing continuous opacity at all model points. Can be computed with babsma.f
# or be a .opa file from the MARCS web site.
#
'MODELOPAC:' 'contopac/${MODEL}opac'
###########
# output file containing spectrum
#
'RESULTFILE :' 'syntspec/${result}'
###########
# Chemical composition. First overall metallicity, then alpha/Fe, Helium/H, and r- and s-process
# The latter are scaled according to their solar-system fraction (see makeabund.f)
# finally individual abundances can be provided by first giving how many of them are changed and then
# for each of them their atomic number followed by the absolute abundance
# in bsyn.f isotopic fractions can be set, e.g. 
# 6.012 0.9
# 6.013 0.1
# to set 90% of 12C and 10% of 13C.
# abund_source can be Magg et al. 2022 (magg), Asplund et al. 2007 (asp2007) or Grevesse & Sauval 1998 (gs1998)
# See makeabund.f
#
'ABUND_SOURCE:'   'magg'
'METALLICITY:'    '${METALLIC}'
'ALPHA/Fe   :'    '0.00'
'HELIUM     :'    '0.00'
'R-PROCESS  :'    '0.00'
'S-PROCESS  :'    '0.00'
'INDIVIDUAL ABUNDANCES:'   '1'
26  $Feabu
'ISOTOPES : ' '0'
###########
# line lists. there are two ways of specifying them:
# 1) Use NFILES to give their number, and then list them one per line below.
# 2) List them all in a file: LIST_OF_LINELISTS
#
#'NFILES   :' '2'
#linelists/nlte_linelist_test.txt
#DATA/Hlinedata
'LIST_OF_LINELISTS:' 'linelists/list.list'
###########
# spherical (T) or plane-parallel (F) radiative transfer. 
# If spherical, a few more parameters are read
# Do not change these parameters unless you really know what you are doing.
# NB: the last one before EOF can be decreased towards 1, e.g. 1.001 to increase the sampling
# of intercepting rays in spherical geometry. This may improve the accuracy of the radiative
# transfer solution, but will increase computing time.
'SPHERICAL:'  'F'
  30
  300.00
  15
  1.30
EOF
